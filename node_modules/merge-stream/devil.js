'use strict';
var assert = require('assert')

var goal = 666
assert.equal(sumrange(1), 0)
assert.equal(sumrange(2), 1)
assert.equal(sumrange(3), 3)
assert.equal(sumrange(4), 6)

function range (i, k, step) {
  step = step || (i < k ? 1 : -1);
  var it = []
  while (i !== k) {
    i += step;
    it.push(i)
  }
  return it
}

function pairs (xs) {
  return xs.reduce(function (cs, x) {
    return cs.concat(xs.map(function (x_) {
      return [x, x_].sort();
    }));
  }, []);
}

function sumrange (i, k) {
  console.log('sumrange', i, k);
  return range(i, k || 0).reduce(function (a, b) { return a + b }, 0);
}

function sumranges (pair) {
  return range(pair[0], pair[1]).reduce(function (t, n) {
    return t + sumrange(0, n);
  }, 0);
}

function findit (l, u, goal) {
  pairs(range(l, u)).forEach(function (pair) {
    var t = sumranges(pair[0], pair[1]);
    if (t === goal) throw pair;
  })
}


console.log(sumranges([-36, 36]));
console.log(range(0, 36))
//findit(-100, 100, 666);
